<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
							 xmlns:s="library://ns.adobe.com/flex/spark" 
							 xmlns:mx="library://ns.adobe.com/flex/mx" 
							 xmlns:view="com.juiceanalytics.fantasytracker.teamDisplay.view.*"
							 minWidth="955" 
							 minHeight="600" 
							 backgroundColor="white" 
							 applicationComplete="onApplicationComplete(event)">
	
	<fx:Script>
		<![CDATA[
			import com.juiceanalytics.fantasytracker.infrastructure.ApplicationPresenter;
			import com.juiceanalytics.fantasytracker.leagueDisplay.view.LeagueContainer;
			
			import mx.events.FlexEvent;
			
			import org.springextensions.actionscript.context.support.FlexXMLApplicationContext;
			import org.springextensions.actionscript.ioc.factory.config.EventHandlerMetaDataPostProcessor;
			import org.springextensions.actionscript.stage.DefaultAutowiringStageProcessor;
			
			/**
			 * Force the compiler to include the code for classes created in the context.
			 */
			private var _compiledClasses:Array = [
				DefaultAutowiringStageProcessor, 
				EventHandlerMetaDataPostProcessor,
				// Add necessary presenters
				ApplicationPresenter
			];
			
			/**
			 * Holds a reference to the application context.
			 */
			private var _appContext:FlexXMLApplicationContext;
			
			/**
			 * Instantiate the application context after the Flex framework is created.
			 * This approach helps limit the initial loading screen time.
			 */
			private function onApplicationComplete(event:FlexEvent):void {
				_appContext = new FlexXMLApplicationContext();
				_appContext.addConfigLocation("../src/main/resources/application-context.xml");
				_appContext.addEventListener(Event.COMPLETE, onAppContextLoad);
				_appContext.addEventListener(IOErrorEvent.IO_ERROR, onAppContextFail);
				_appContext.load();
			}
			
			private function onAppContextLoad(event:Event):void {
				var lc:LeagueContainer = new LeagueContainer();
				this.addElement(lc);
			}
			
			private function onAppContextFail(event:Event):void {
				trace("application context load failed");
			}
			
		]]>
	</fx:Script>
	
	<fx:Style source="com/juiceanalytics/fantasytracker/view/styles/fantasyFootballStyles.css"/>
	<fx:Style source="com/juiceanalytics/fantasytracker/teamDisplay/view/styles/teamContainerStyles.css"/>
	<fx:Style source="com/juiceanalytics/fantasytracker/leagueDisplay/view/styles/leagueContainerStyles.css"/>
	
</s:Application>
